/*
File to submit by each member: G0999_9999999.sql

INDIVIDUAL ASSIGNMENT SUBMISSION
Submit one individual report with SQL statements only (*.docx)
and one sql script (*.sql for oOacle)

Template save as "G999_YourStudentID.sql"
e.g. G001_999999.sql

GROUP NUMBER : G116
PROGRAMME : IA
STUDENT ID : 2102648
STUDENT NAME :Wilson Chua Wai Lun
Submission date and time: 5-MAY-24 9:00pm

Your information should appear in both files one individual report docx & one individual sql script, then save as G01_99ACB999999.zip
Should be obvious different transaction among the members

*/

--setup
SET SERVEROUTPUT ON;
set pagesize 100;
set linesize 200;
SET SERVEROUTPUT ON;


/* Query 1 */
--check the sales by language , to check which language is popular

SELECT languageName, SUM(s.quantity_purchased)
FROM language l, book b, sale s
WHERE l.languageID = b.languageID
AND s.bookID = b.bookID
GROUP BY languageName;


/* Query 2 */
--Calculate expenses on books 
--check the money spent purchasing books from publisher and
--to know how much have been spent to buy in stock

SELECT title, CONCAT('$', SUM(restockPrice*restockQty)) AS expenses
FROM book b, restock r
WHERE b.bookID = r.bookID
GROUP BY title; 



/* Stored procedure 1 */
--Insert invoice (create new invoices such that the payment and staff in charged will be recorded as soon as possible) 

CREATE OR REPLACE PROCEDURE insert_invoice
(
i_invoiceID IN NUMBER,
i_staff_ID IN NUMBER,
i_payment_date IN DATE
)
IS
BEGIN
INSERT INTO invoice(
invoiceID,
staff_id,
payment_date)
VALUES (i_invoiceID, i_staff_id, i_payment_date);
COMMIT;
END;
/

--code to execute
SELECT * FROM invoice;

EXECUTE insert_invoice(30010,101,TO_DATE('3-5-2024', 'dd-mm-yyyy'));

SELECT * FROM invoice;



/* Stored procedure 2 */
--Update invoice (able to update the invoice immediately after the payment is made)
CREATE OR REPLACE PROCEDURE update_invoice
(
i_invoiceID IN NUMBER,
i_payment_date IN DATE
)
IS
BEGIN
UPDATE invoice
SET payment_date = i_payment_date
WHERE invoiceID = i_invoiceID;
COMMIT;
END;
/

--code to execute
SELECT invoiceID, payment_date
FROM invoice;

EXECUTE update_invoice(30005, TO_DATE('2-7-2024','dd-mm-yyyy'));

SELECT invoiceID, payment_date
FROM invoice;



/* Function 1 */
-- return expenses on books 
-- check the money spent purchasing books from publisher

CREATE OR REPLACE FUNCTION Expenses
(exp_bookid IN NUMBER)
RETURN NUMBER
IS
BookExpenses NUMBER(6,2);
BEGIN
SELECT SUM(restockQty*restockPrice) INTO BookExpenses
FROM restock
WHERE bookid = exp_bookid;
RETURN BookExpenses;
END;
/

--output
DECLARE
BEGIN
DBMS_OUTPUT.PUT_LINE('Calculated expenses for 1001 is RM' || (Expenses('1001')));
END;
/

/* Function 2 */
-- return profit generate by branch (check profit generated by branch)

CREATE OR REPLACE FUNCTION branch_profit
(branchid IN NUMBER)
RETURN NUMBER
IS
brProfit NUMBER(6);
BEGIN
SELECT ROUND(SUM(s.quantity_purchased*pr.bookprice),2) INTO brProfit
FROM branch br, sale s, price pr, book b
WHERE s.bookid = b.bookid
AND pr.bookid = b.bookid
AND s.branch_id = br.branch_id
AND branchid = br.branch_id
AND branchid = s.branch_id;
RETURN brProfit;
END;
/

--output
DECLARE
BEGIN
DBMS_OUTPUT.PUT_LINE('Profit generated by branch = RM' || branch_profit(1));
END;
/